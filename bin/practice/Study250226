*생성자
- 생성자의 이름은 클래스 이름과 같아야 함 -> 따라서 첫 글자도 대문자로 시작
- 생성자는 반환 타입이 없음
- 나머지는 메서드와 같다

*생성자 호출
- 생성자는 인스턴스를 생성하고 나서 즉시 호출 
- 생성자를 호출하는 방법은 new 명령어 다음에 생성자 이름과 매개변수에 맞추어 인수를 전달
new 생성자이름(생성자에 맞는 인수 목록)
new 클래스이름(생성자에 맞는 인수 목록)
- 참고로 생성자 이름이 클래스 이름과 같아야 하는 이유

*생성자의 장점
1. 중복 호출 제거 
- 생성자 덕분에 객체를 생성하는 동시에 필요한 작업(초기화)을 한번에 처리할 수 있게 됨

2. 제약 - 생성자 호출 필수
- 생성자 호출을 하지 않아도 동작하지만 만약 회원 정보의 경우라면 아무 정보가 없는 유령 회원이 시스템 내부에 등장 -> 시스템적인 큰 문제
- 생성자를 사용하면 호출 시 정보를 인수로 넣지않으면 컴파일 오류가 발생 -> 시스템적 문제를 사전에 방지 가능
- 직접 정의한 생성자가 있다면 그 생성자를 반드시 호출해야 한다는 점 (생성자를 사용하면 필수값 입력을 보장할 수 있다 -> 적절한 제약이 있음 )

*기본 생성자
- 매개변수가 없는 생성자
- 클래스에 생성자가 하나도 정의되어있지않으면 자바 컴파일러는 매개변수가 없고, 작동하는 내부코드가 없는 기본 생성자를 자동으로 만들어 줌
- 하지만 생성자가 하나라도 정의되어있으면 자바는 기본 생성자를 만들지 않음!

*기본 생성자를 왜 자동으로 만들어줄까?
- 생성자 기능이 필요없는 경우에도 개발자가 생성자를 매번 직접 만들어야하기 때문에...

*생성자 정리
- 생성자는 반드시 호출되어야 함
- 생성자가 없으면 기본 생성자가 제공됨
- 생성자가 하나라도 있으면 기본 생성자가 제공되지 않음 -> 이 경우 개발자가 정의한 생성자를 직접 호출해야 함

