*자바 메모리 구조
1. 메서드 영역: 클래스 정보를 보관 - 붕어빵 틀
2. 힙 영역: 객체(인스턴스)가 생성되는 영역 -> new 명령어를 사용하면 이 영역을 사용하게 됨 - 붕어빵 틀로부터 생성된 붕어빵의 실체가 존재하는 공간 (배열도 new로 생성하기 때문에 이 영역에 생성)
3. 스택 영역: 실제 프로그램이 실행되는 영역 - 메서드를 실행할 때 마다 하나씩 쌓임


1. 메서드 영역: 프로그램을 실행하는데 필요한 공통 데이터 관리 - 프로그램의 모든 영역에서 공유
	- 클래스 정보: 클래스의 실행 코드(바이트 코드), 필드, 메서드, 생성자 코드 등의 모든 실행 코드
	- static 영역: static 변수들을 보관
	- 런타임 상수 풀: 프로그램을 실행하는데 필요한 공통 리터럴 상수를 보관
	
2. 스택 영역: 자바 실행 시, 하나의 실행 스택이 생성 
	- 스택 프레임: 스택 영역에 쌓이는 네모 박스가 하나의 스택 프레임 - 지역 변수, 중간 연산 결과, 메서드 호출 정보 등이 포함되어 메서드를 호출할 때 마다 하나의 스택 프레임이 쌓이고, 메서드 종료 시 해당 스택 프레임이 제거됨
	- 더 정확하게 말하면 각 쓰레드별로 하나의 실행 스택이 생성 (쓰레드 수 만큼 스택 영역이 생성)

3. 힙 영역: 객체(인스턴스)와 배열이 생성되는 영역 
	- 가비지 컬렉션이 이루어지는 주요 영역 (더 이상 참조되지 않는 객체는 CG에 의해 제거됨)
	
** 메서드 영역에서의 메서드는 공통된 코드를 공유 -> 객체가 생성될 때 인스턴스 변수에는 메모리가 할당되지만, 메서드에 대한 새로운 메모르 할당은 없음
- 메서드는 메서드 영역에서 공통으로 관리되고 실행함
------------------------------------------------------------------------------------------------------------------------------------------

*스택 구조: 후입 선출(LIFO, Last In First Out) - ex. 냉장고에 음료수 넣고 빼는 시스템 (넣고 빼는 입구가 문쪽 하나라서 가장 마지막에 넣은 것을 가장 먼저 꺼냄)
나중에 넣은 것이 가장 먼저 나오는 것 -> 이런 자료 구조를 스택(Stack)이라고 함 
(넣기)1->2->3->(빼기)3->2->1

*큐 구조: 선입 선출(FIFO, First In First Out) - ex. 편의점 음료수 채우는 시스템 (뒷편 창고에서 직원이 넣으면 가장 먼저 넣은 것을 손님이 밖에서 꺼내는 구조)
가장 먼저 넣은 것이 가장 먼저 나오는 것 -> 이런 자료 구조를 큐(Queue)라고 함

